# Description : Fast and portable software for combinatorial optimization
# URL         : https://developers.google.com/optimization
# Maintainer  : camille, camille at lzr dot pw
# Depends on  : cmake
# Optional    : benchmark eigen3 protobuf re2 zlib

name=or-tools
version=9.12
release=1
source=("https://github.com/google/$name/archive/v$version.tar.gz")

build() {
    cd "$name-$version"

    mkdir build; cd "$_"

    local -a args

    args=(
        -DCMAKE_C_FLAGS:STRING="$CFLAGS"
        -DCMAKE_CXX_FLAGS:STRING="$CXXFLAGS"
        -DCMAKE_INSTALL_PREFIX=/usr
        -DCMAKE_INSTALL_LIBDIR=lib
        -DBUILD_TYPE=Release
        -DUSE_COINOR=OFF
        -DUSE_SCIP=OFF
        -DBUILD_SAMPLES=OFF
        -DBUILD_EXAMPLES=OFF
        -DBUILD_absl=ON
    )

    _build_flags() {
        local bool

        prt-get isinst "$1" \
            && bool=OFF     \
            || bool=ON

        args+=("$2=$bool")
    }

    _build_flags benchmark -DBUILD_benchmark 
    _build_flags eigen     -DBUILD_Eigen3
    _build_flags highs     -DBUILD_HIGHS
    _build_flags protobuf  -DBUILD_Protobuf
    _build_flags re2       -DBUILD_re2
    _build_flags zlib      -DBUILD_ZLIB

    cmake .. "${args[@]}"

    make
    make DESTDIR="$PKG" install
}
